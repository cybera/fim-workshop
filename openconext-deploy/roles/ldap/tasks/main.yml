---
- name: Install openldap server
  yum: name={{ item }} state=present
  with_items:
     - openldap-servers
  tags: ldap

- name: Install openldap client utils
  yum: name={{ item }} state=present
  with_items:
    - openldap-clients

- name: start slapd at boot
  service: name=slapd enabled=yes
  tags: ldap

- name: correct config present
  shell: "(test -d /etc/openldap/slapd.d && find /etc/openldap/slapd.d/ -type f | xargs grep -i SURFnet | wc -l) || echo 0"
  register: config_correct
  tags: ldap
  changed_when: False

- name: Copy slapd.conf
  template: src=slapd.conf.j2 dest=/etc/openldap/slapd.conf
  tags: ldap

- name: "copy schema's and ldiffs"
  copy: src={{ item }} dest=/etc/openldap/schema/{{ item }}
  with_items:
    - collab.schema
    - eduperson-200412.ldif
    - nleduperson.schema
  tags: ldap

- name: disable default ldap bindings
  when: (ansible_distribution == 'RedHat' and ansible_distribution_major_version == '6')
  lineinfile: 'dest=/etc/sysconfig/ldap line="{{ item }}=no" regexp="^#?{{ item }}="'
  with_items:
    - SLAPD_LDAP
    - SLAPD_LDAPI
    - SLAPD_LDAPS
  tags: ldap

- name: start slapd to generate new config
  when: config_correct.stdout == "0"
  service: name=slapd state=started
  tags: ldap

- name: stop slapd
  when: config_correct.stdout == "0"
  service: name=slapd state=stopped sleep=2
  tags: ldap

- name: remove slapd.d
  file: path=/etc/openldap/slapd.d state=absent
  when: config_correct.stdout == "0"
  tags: ldap

- name: create slapd.d
  file: path=/etc/openldap/slapd.d state=directory owner=ldap group=ldap mode=0700
  tags: ldap

- name: generate new config
  become_user: ldap
  shell: /usr/sbin/slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d
  when: config_correct.stdout == "0"
  tags: ldap

- name: start slapd
  service: name=slapd state=started
  tags: ldap

- name: copy ldiffentries
  template: src=ldap-entries.ldif.j2 dest=~/ldap-entries.ldif
  tags: ldap

- name: import entries
  shell: "ldapadd -x -D {{ ldap.admin.user }} -h {{ ldap_host }} -w {{ ldap.admin.password }} -f ~/ldap-entries.ldif"
  register: ldapadd_output
  changed_when: "ldapadd_output.rc != 68"
  failed_when: "ldapadd_output.rc not in {{ ldap.ldapadd_array }}"
  tags: ldap

- name: restart slapd
  service: name=slapd state=restarted
  when: ldapadd_output.rc == 0
  tags: ldap
