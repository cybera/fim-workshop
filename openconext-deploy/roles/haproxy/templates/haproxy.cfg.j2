#jinja2: lstrip_blocks: True
#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------

global
  log         127.0.0.1 local2
  log-send-hostname
  chroot      /var/lib/haproxy
  pidfile     /var/run/haproxy.pid
  maxconn     4000
  user        haproxy
  group       haproxy
  nbproc      1
  ulimit-n    9000
  daemon
  tune.ssl.default-dh-param 2048
  ssl-default-bind-options no-sslv3
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
  ssl-default-server-options no-sslv3
  ssl-default-server-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
{% if haproxy_multi_instance is not defined %}
  stats socket /var/lib/haproxy/stats{% if develop %} mode 600 level admin{% endif %}
{% endif %}
{% if haproxy_multi_instance is defined  %}
  stats socket /var/lib/haproxy/{{ item.name }}.stats
{% endif %}

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------

defaults
    mode                    http
    log                     global
    option                  httplog
#   option                  dontlognull
    option                  http-ignore-probes
    option                  http-server-close
    option                  forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

{% if haproxy_multi_instance is not defined %}
## Frontend configuration

#--------------------------------------------------------------------
#  frontend 
# -------------------------------------------------------------------
frontend ssl_ip

    bind {{ haproxy_sni_ip }}:443 ssl crt /etc/pki/haproxy/star_haproxy.pem {% for application in haproxy_applications %} {% if application.full_vhost_name is defined %} crt /etc/pki/haproxy/{{ application.name }}_haproxy.pem {% endif %} {% endfor %}   no-sslv3 transparent
    http-request del-header Proxy
    rspadd  Strict-Transport-Security:\ max-age=15768000
    capture request header User-agent len 100
    bind {{ haproxy_sni_ip }}:80 transparent
    redirect scheme https code 301 if !{ ssl_fc }

    {% for application in haproxy_applications %}
    {%if application.restricted is not defined %}
    acl {{ application.name }} hdr(host) -i {% if application.full_vhost_name is not defined  %} {{ application.vhost_name }}.{{ base_domain }}
    {% else %} {{ application.full_vhost_name }} 
    {% endif %}
    {% endif %}
    {% endfor %}
    {% for application in haproxy_applications %}
    {%if application.restricted is not defined %}
    use_backend {{ application.name }}_be if {{ application.name }}
    {% endif %}
    {% endfor %}


{% if haproxy_sni_ip_restricted is defined %}
#--------------------------------------------------------------------
##  frontend restricted applications
## -------------------------------------------------------------------
frontend ssl_restricted_ip

    bind {{ haproxy_sni_ip_restricted }}:443 ssl crt /etc/pki/haproxy/{{ tls_star_cert_haproxy }}  no-sslv3 transparent
    http-request del-header Proxy
    rspadd  Strict-Transport-Security:\ max-age=15768000
    capture request header User-agent len 100
    bind {{ haproxy_sni_ip_restricted }}:80 transparent
    redirect scheme https code 301 if !{ ssl_fc }

    {% for application in haproxy_applications %}
    {%if application.restricted is defined %}
    acl {{ application.name }} hdr(host) -i {% if application.full_vhost_name is not defined  %} {{ application.vhost_name }}.{{ base_domain }}
    {% else %} {{ application.full_vhost_name }}
    {% endif %}
    {% endif %}
    {% endfor %}
    {% for application in haproxy_applications %}
    {%if application.restricted is defined %}
    use_backend {{ application.name }}_be if {{ application.name }}
    {% endif %}
    {% endfor %}


{% endif %}
{% for application in haproxy_applications %}
#---------------------------------------------------------------------
# {{ application.name }} backend
#---------------------------------------------------------------------
#
backend {{ application.name }}_be
  option httpchk {{ application.ha_method }} {{ application.ha_url }} HTTP/1.0
  option forwardfor # This sets X-Forwarded-For
  rspdel ^Strict-Transport-Security:.* #Remove hsts header from backend applications
  mode http
  balance roundrobin
  option httpclose

  cookie HTTPSERVERID insert nocache indirect httponly secure

  {% for server in application.servers %}
  server {{ server.label }} {{ server.ip }}:{{ application.port }} cookie {{ server.label }} check inter 20000 fall 2 rise 2 maxconn 1024 {% if application.sslbackend is defined%} ssl verify required verifyhost {{ application.backend_vhost_name }} ca-file /etc/pki/tls/certs/ca-bundle.crt
  {% endif %}
  {% endfor %}

{% endfor %}
{% endif %}

{% if haproxy_multi_instance is defined  %}
## Frontend configuration
#--------------------------------------------------------------------
# {{ item.name }} frontend
# -------------------------------------------------------------------
	{% if item.name == "fourthset" %}

	frontend {{ item.name }}

	bind {{ haproxy_sni_ip }}:443 ssl {% for application in haproxy_applications if not application.hidden %} crt /etc/haproxy/{{ application.name }}/{{ application.name }}.pem {% endfor %}  no-sslv3 transparent
	bind {{ haproxy_sni_ipv6 }}:443 ssl {% for application in haproxy_applications if not application.hidden %} crt /etc/haproxy/{{ application.name }}/{{ application.name }}.pem {% endfor %}  no-sslv3 transparent
	http-request del-header Proxy
    	rspadd  Strict-Transport-Security:\ max-age=15768000
        capture request header User-agent len 100
    	bind {{ haproxy_sni_ip }}:80 transparent
    	redirect scheme https code 301 if !{ ssl_fc }
    	{% for application in haproxy_applications if not application.hidden %}
    	acl {{ application.name }} hdr(host) -i {%if application.vhost_name is defined%} {{ application.vhost_name }}.{{ base_domain }} 
        {% else %}{{ application.full_vhost_name }} 
        {% endif %}
    	{% endfor %}

    	{% for application in haproxy_applications if not application.hidden %}
    	use_backend {{ application.name }}_be if {{ application.name }}
    	{% endfor %}

	{% for application in haproxy_applications if not application.hidden %}

	#---------------------------------------------------------------------
	# {{ application.name }} backend
	#---------------------------------------------------------------------
	#
	backend {{ application.name }}_be
  	option httpchk {{ application.ha_method }} {{ application.ha_url }} HTTP/1.0
  	option forwardfor # This sets X-Forwarded-For
        rspdel ^Strict-Transport-Security:.* #Remove hsts header from backend applications
  	mode http
  	balance roundrobin
  	option httpclose
  	cookie HTTPSERVERID insert nocache indirect httponly secure
  	{% for server in application.servers_fourthset %}
  	server {{ server.label }} {{ server.ip }}:{{ application.port }} cookie {{ server.label }} check inter 20000 fall 2 rise 2 maxconn 1024 {% if application.sslbackend is defined%} ssl verify required verifyhost {{ application.backend_vhost_name }} ca-file /etc/pki/tls/certs/ca-bundle.crt {% endif %}

  	{% endfor %}
	{% endfor %}

	{% else %}

frontend {{ item.name }}

     bind {{ item.ip }}:443 ssl crt /etc/haproxy/{{ item.name }}/{{ item.name }}.pem no-sslv3 transparent
     bind {{ item.ipv6 }}:443 ssl crt /etc/haproxy/{{ item.name }}/{{ item.name }}.pem no-sslv3 transparent
     http-request del-header Proxy
     rspadd  Strict-Transport-Security:\ max-age=15768000
     capture request header User-agent len 100
     bind {{ item.ip }}:80
     redirect scheme https code 301 if !{ ssl_fc }
     acl url_all         path_beg        -i /
     use_backend         {{ item.name }}_be       if url_all
     default_backend     {{ item.name }}_be


#---------------------------------------------------------------------
#  {{ item.name }} backend
#---------------------------------------------------------------------
backend {{ item.name }}_be

    option httpchk {{ item.ha_method }} {{ item.ha_url }} HTTP/1.0
    option forwardfor # This sets X-Forwarded-For
    rspdel ^Strict-Transport-Security:.* #Remove hsts header from backend applications
    mode http
    balance roundrobin
    option httpclose
    option allbackups
    cookie HTTPSERVERID insert nocache indirect httponly secure
    {% for server in item.servers %}
    server {{ server.label }} {{ server.ip }}:{{ item.port }} cookie {{ server.label }} check inter 20000 fall 2 rise 2 maxconn 1024  {% if item.sslbackend is defined %} ssl verify required verifyhost {{ item.backend_vhost_name }} ca-file /etc/pki/tls/certs/ca-bundle.crt {% endif %} 
    {% endfor %}
    {% if item.servers_backup is defined %}
    {% for server in item.servers_backup %}
    server {{ server.label }} {{ server.ip }}:{{ item.port }} cookie {{ server.label }} check inter 20000 fall 2 rise 2 maxconn 1024 backup {% if item.sslbackend is defined%} ssl verify required verifyhost {{ item.backend_vhost_name }} ca-file /etc/pki/tls/certs/ca-bundle.crt {% endif %}

    {% endfor %} 
    {% endif %}

{% endif %}
{% endif %}

